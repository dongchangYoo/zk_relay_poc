import "utils/casts/u32_to_bits.zok" as u32_to_bits
import "utils/casts/u32_from_bits.zok" as u32_from_bits
import "utils/casts/u32_8_to_bool_256.zok" as u32_8_to_bits
import "utils/casts/bool_256_to_u32_8.zok" as u32_8_from_bits

def u32_to_big_endian(u32 value) -> (u32):
    bool[32] bits = u32_to_bits(value)
    return u32_from_bits([...bits[24..32],...bits[16..24],...bits[8..16],...bits[0..8]])

def u32_8_to_big_endian(u32[8] value) -> (u32[8]):
    bool[256] bits = u32_8_to_bits(value)
    return u32_8_from_bits([
       ...bits[248..256],
       ...bits[240..248],
       ...bits[232..240],
       ...bits[224..232],
       ...bits[216..224],
       ...bits[208..216],
       ...bits[200..208],
       ...bits[192..200],
       ...bits[184..192],
       ...bits[176..184],
       ...bits[168..176],
       ...bits[160..168],
       ...bits[152..160],
       ...bits[144..152],
       ...bits[136..144],
       ...bits[128..136],
       ...bits[120..128],
       ...bits[112..120],
       ...bits[104..112],
       ...bits[96..104],
       ...bits[88..96],
       ...bits[80..88],
       ...bits[72..80],
       ...bits[64..72],
       ...bits[56..64],
       ...bits[48..56],
       ...bits[40..48],
       ...bits[32..40],
       ...bits[24..32],
       ...bits[16..24],
       ...bits[8..16],
       ...bits[0..8]
   ])